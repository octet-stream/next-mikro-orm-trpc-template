name: CI

on:
  push:
    branches: [main]
    paths:
      - "**.ts"
      - "**.tsx"
      - "tsconfig.json"
      - "ava.config.js"
      - "next.config.js"
      - "postcss.config.js"
      - "tailwind.config.js"
      - "package.json"
      - "pnpm-lock.yaml"
      - "docker-compose.test.yml"
      - ".github/workflows/ci.yml"
      - ".c8rc.json"
  pull_request:
    branches: [main]
    paths:
      - "**.ts"
      - "**.tsx"
      - "tsconfig.json"
      - "ava.config.js"
      - "next.config.js"
      - "postcss.config.js"
      - "tailwind.config.js"
      - "package.json"
      - "pnpm-lock.yaml"
      - "docker-compose.test.yml"
      - ".github/workflows/ci.yml"
      - ".c8rc.json"

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node: [18.x, 20.x, 21.x]
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js v${{matrix.node}}
        uses: actions/setup-node@v3
        with:
          node-version: ${{matrix.node}}

      - name: Setup pnpm
        id: pnpm-install
        uses: pnpm/action-setup@v2
        with:
          version: 8
          run_install: false

      - name: Get pnpm store directory
        id: pnpm-cache
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT

      - uses: actions/cache@v3
        name: Setup pnpm cache
        with:
          path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm i --frozen-lockfile

      - name: Setup docker compose
        run: docker compose -f docker-compose.test.yml up --wait

      - name: Run tests
        run: pnpm run ci

      - name: Teardown docker compose
        run: docker compose -f docker-compose.test.yml down

      - name: Upload codecov report
        uses: codecov/codecov-action@v3
        if: matrix.node == '18.x'
        with:
          file: ./coverage/coverage-final.json
          flags: unittests
          fail_ci_if_error: false
